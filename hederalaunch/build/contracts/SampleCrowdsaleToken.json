{
  "contractName": "SampleCrowdsaleToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Very simple ERC20 Token that can be minted. It is meant to be used in a crowdsale contract.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"SampleCrowdsaleToken\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/delerex/DelerexGit/Hedera/hederalaunch/contracts/MintableSale.sol\":\"SampleCrowdsaleToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910\",\"urls\":[\"bzzr://cea53b805426e40efadb24f2613aca39182462e9ecd23fde7aacf0c4b5885aaf\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x6fd4b01de35c3acba3b2a78d915a12abf893b7d392c07370b53881bde8a8a272\",\"urls\":[\"bzzr://0c4cec40e7b9ddd133193d88ae3a81cd162396b73add7bee6263231c89a32566\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol\":{\"keccak256\":\"0x22ad427395c439878122cbfbf13e896fd48d1fad0c6fc889a36b4f1bf4743ff4\",\"urls\":[\"bzzr://1c725bc536a34c8ae31246c7c4327a2fe7abeb7686979516c1ab65c8959f71ec\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\":{\"keccak256\":\"0x6bd89da8cba19e12e2f482b7fbd1309376f8a0c84bdc6a3c9a49a4b2b08ae172\",\"urls\":[\"bzzr://cbcf47e842698ffb7f0ae8b2da9f005c3287d7e859f2bfc31eeeb712bfc61aa4\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\":{\"keccak256\":\"0x343249b95ade6a20737b7f681a05a257f14a39b21043ff2e31d8e5d861d83777\",\"urls\":[\"bzzr://3a53c6bbb534d2f038289952e35a75bb572f5998582b1d47827907f027dd7fb4\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\":{\"keccak256\":\"0x5ae16586a3b5e976aae1a08fdf109ead3840961aa0a1f5b4590d4adf5cdad3b5\",\"urls\":[\"bzzr://3128e606836af985a2c445aa5c5886c6ac6181d8edf565a2a2743fe502859ba2\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0x9407dd37cfed74aa107fd1614c478ba0a2bc3e084e9aa8fbd5a6f316c53aed3b\",\"urls\":[\"bzzr://196407d49d26f709494b573b06676eaa21b0019ebebd4e610a8b1276965a8067\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/ownership/Secondary.sol\":{\"keccak256\":\"0xa5f5ed53adb91ab6a16bee78b255b4b8ed59945bd5c9a7b360d8a62fc63b8da0\",\"urls\":[\"bzzr://2dd07a98e47fe608668d8d3a6591b27e5bd884cdf2f2e6dbd8e571f3a43ea8e3\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/payment/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x707bb203cb0dda04fa77dbc1768aff347927a77f2bee6610491b809a31d78db1\",\"urls\":[\"bzzr://b3ca6da72b1a6c881f8166ed6f50dc478419fda7199ae54ab80df5dc13a615af\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/payment/escrow/Escrow.sol\":{\"keccak256\":\"0x50d706eae690fd943acb15f93718932efbb871e6d5cabba8f9d55668c4180978\",\"urls\":[\"bzzr://cbab282856bd375f08edc3b7e7b91a0e84a07b774e6745c9ac8566497fd1633d\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/payment/escrow/RefundEscrow.sol\":{\"keccak256\":\"0x316fbc76d98e4a1103d612710398770d6041ecaff7ffbf1c9aee56253f5f5499\",\"urls\":[\"bzzr://01f16146893642d25250a525d24553300c81a330a373c8c98e02794c355146a7\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzzr://07fb42206812a17c1f71e548cfa5cec6f9aa1ae0ca5df870718ca4aa9759d1a5\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzzr://f280f38d5ab6e1b89fd898ccd3901054a56572c141d91d30302e2db1db4cc6ff\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x6df8d686813b2875e99928ecd07bf8ee6d7473bc6a95eb1190e8fdba86beda76\",\"urls\":[\"bzzr://b4a3a1136392be8723a0d9627d1626323e3891c98e88ca5ab48da1dada375580\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzzr://28230529ef5e63b09eec01e3ca835ccb722533bc5379e6fdd04270c42157f8c3\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x59cd058304d67cf05a94543c28a8ae814a0110ba6126f0a1d66c91f0f4d3e853\",\"urls\":[\"bzzr://2ae5ba699e1f844cece806b55b5d37302e9c913575f49b549e1e07203e686921\"]},\"/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzzr://d26b514ac785d2a74a903067d051b34541e86a7fc63b782bb39d3a576d8eb4da\"]},\"/home/delerex/DelerexGit/Hedera/hederalaunch/contracts/MintableSale.sol\":{\"keccak256\":\"0xeb6cb74c5b7e2f79d99f09d6f6f55ef4259d5aff4407248811adfd7b5c3b4867\",\"urls\":[\"bzzr://3d0c6525849ca3d3d37b989f324634337c9a44789cc20c813ad4aff3e8003585\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040805190810160405280601681526020017f53616d706c652043726f776473616c6520546f6b656e000000000000000000008152506040805190810160405280600381526020017f534354000000000000000000000000000000000000000000000000000000000081525060126200009a33620000e3640100000000026401000000009004565b8251620000af9060049060208601906200029c565b508151620000c59060059060208501906200029c565b506006805460ff191660ff9290921691909117905550620003419050565b620000fe60038264010000000062000dcf6200013582021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6200014a8282640100000000620001dc810204565b15620001b757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156200027c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002df57805160ff19168380011785556200030f565b828001600101855582156200030f579182015b828111156200030f578251825591602001919060010190620002f2565b506200031d92915062000321565b5090565b6200033e91905b808211156200031d576000815560010162000328565b90565b610f2780620003516000396000f3fe6080604052600436106100d4577c0100000000000000000000000000000000000000000000000000000000600035046306fdde0381146100d9578063095ea7b31461016357806318160ddd146101b057806323b872dd146101d7578063313ce5671461021a578063395093511461024557806340c10f191461027e57806370a08231146102b757806395d89b41146102ea578063983b2d56146102ff5780639865027514610334578063a457c2d714610349578063a9059cbb14610382578063aa271e1a146103bb578063dd62ed3e146103ee575b600080fd5b3480156100e557600080fd5b506100ee610429565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610128578181015183820152602001610110565b50505050905090810190601f1680156101555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016f57600080fd5b5061019c6004803603604081101561018657600080fd5b50600160a060020a0381351690602001356104bf565b604080519115158252519081900360200190f35b3480156101bc57600080fd5b506101c56104d5565b60408051918252519081900360200190f35b3480156101e357600080fd5b5061019c600480360360608110156101fa57600080fd5b50600160a060020a038135811691602081013590911690604001356104db565b34801561022657600080fd5b5061022f610532565b6040805160ff9092168252519081900360200190f35b34801561025157600080fd5b5061019c6004803603604081101561026857600080fd5b50600160a060020a03813516906020013561053b565b34801561028a57600080fd5b5061019c600480360360408110156102a157600080fd5b50600160a060020a038135169060200135610577565b3480156102c357600080fd5b506101c5600480360360208110156102da57600080fd5b5035600160a060020a0316610608565b3480156102f657600080fd5b506100ee610623565b34801561030b57600080fd5b506103326004803603602081101561032257600080fd5b5035600160a060020a0316610684565b005b34801561034057600080fd5b50610332610715565b34801561035557600080fd5b5061019c6004803603604081101561036c57600080fd5b50600160a060020a038135169060200135610720565b34801561038e57600080fd5b5061019c600480360360408110156103a557600080fd5b50600160a060020a03813516906020013561075c565b3480156103c757600080fd5b5061019c600480360360208110156103de57600080fd5b5035600160a060020a0316610769565b3480156103fa57600080fd5b506101c56004803603604081101561041157600080fd5b50600160a060020a0381358116916020013516610782565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104b55780601f1061048a576101008083540402835291602001916104b5565b820191906000526020600020905b81548152906001019060200180831161049857829003601f168201915b5050505050905090565b60006104cc3384846107ad565b50600192915050565b60025490565b60006104e884848461091a565b600160a060020a038416600090815260016020908152604080832033808552925290912054610528918691610523908663ffffffff610ade16565b6107ad565b5060019392505050565b60065460ff1690565b336000818152600160209081526040808320600160a060020a038716845290915281205490916104cc918590610523908663ffffffff610b3e16565b600061058233610769565b15156105fe576040805160e560020a62461bcd02815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201527f20746865204d696e74657220726f6c6500000000000000000000000000000000606482015290519081900360840190fd5b6104cc8383610ba2565b600160a060020a031660009081526020819052604090205490565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104b55780601f1061048a576101008083540402835291602001916104b5565b61068d33610769565b1515610709576040805160e560020a62461bcd02815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201527f20746865204d696e74657220726f6c6500000000000000000000000000000000606482015290519081900360840190fd5b61071281610c97565b50565b61071e33610cdf565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916104cc918590610523908663ffffffff610ade16565b60006104cc33848461091a565b600061077c60038363ffffffff610d2716565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a0383161515610832576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821615156108b8576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03831615156109a0576040805160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610a26576040805160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038316600090815260208190526040902054610a4f908263ffffffff610ade16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610a84908263ffffffff610b3e16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610b38576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610b9b576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0382161515610c02576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610c15908263ffffffff610b3e16565b600255600160a060020a038216600090815260208190526040902054610c41908263ffffffff610b3e16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610ca860038263ffffffff610dcf16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610cf060038263ffffffff610e5316565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610daf576040805160e560020a62461bcd02815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610dd98282610d27565b15610e2e576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b610e5d8282610d27565b1515610ed9576040805160e560020a62461bcd02815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60448201527f6500000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058202400d8909416f99b9a679c80e46a84809fc15271edb242c2acb03ff2146cbc5d0029",
  "deployedBytecode": "0x6080604052600436106100d4577c0100000000000000000000000000000000000000000000000000000000600035046306fdde0381146100d9578063095ea7b31461016357806318160ddd146101b057806323b872dd146101d7578063313ce5671461021a578063395093511461024557806340c10f191461027e57806370a08231146102b757806395d89b41146102ea578063983b2d56146102ff5780639865027514610334578063a457c2d714610349578063a9059cbb14610382578063aa271e1a146103bb578063dd62ed3e146103ee575b600080fd5b3480156100e557600080fd5b506100ee610429565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610128578181015183820152602001610110565b50505050905090810190601f1680156101555780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561016f57600080fd5b5061019c6004803603604081101561018657600080fd5b50600160a060020a0381351690602001356104bf565b604080519115158252519081900360200190f35b3480156101bc57600080fd5b506101c56104d5565b60408051918252519081900360200190f35b3480156101e357600080fd5b5061019c600480360360608110156101fa57600080fd5b50600160a060020a038135811691602081013590911690604001356104db565b34801561022657600080fd5b5061022f610532565b6040805160ff9092168252519081900360200190f35b34801561025157600080fd5b5061019c6004803603604081101561026857600080fd5b50600160a060020a03813516906020013561053b565b34801561028a57600080fd5b5061019c600480360360408110156102a157600080fd5b50600160a060020a038135169060200135610577565b3480156102c357600080fd5b506101c5600480360360208110156102da57600080fd5b5035600160a060020a0316610608565b3480156102f657600080fd5b506100ee610623565b34801561030b57600080fd5b506103326004803603602081101561032257600080fd5b5035600160a060020a0316610684565b005b34801561034057600080fd5b50610332610715565b34801561035557600080fd5b5061019c6004803603604081101561036c57600080fd5b50600160a060020a038135169060200135610720565b34801561038e57600080fd5b5061019c600480360360408110156103a557600080fd5b50600160a060020a03813516906020013561075c565b3480156103c757600080fd5b5061019c600480360360208110156103de57600080fd5b5035600160a060020a0316610769565b3480156103fa57600080fd5b506101c56004803603604081101561041157600080fd5b50600160a060020a0381358116916020013516610782565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104b55780601f1061048a576101008083540402835291602001916104b5565b820191906000526020600020905b81548152906001019060200180831161049857829003601f168201915b5050505050905090565b60006104cc3384846107ad565b50600192915050565b60025490565b60006104e884848461091a565b600160a060020a038416600090815260016020908152604080832033808552925290912054610528918691610523908663ffffffff610ade16565b6107ad565b5060019392505050565b60065460ff1690565b336000818152600160209081526040808320600160a060020a038716845290915281205490916104cc918590610523908663ffffffff610b3e16565b600061058233610769565b15156105fe576040805160e560020a62461bcd02815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201527f20746865204d696e74657220726f6c6500000000000000000000000000000000606482015290519081900360840190fd5b6104cc8383610ba2565b600160a060020a031660009081526020819052604090205490565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104b55780601f1061048a576101008083540402835291602001916104b5565b61068d33610769565b1515610709576040805160e560020a62461bcd02815260206004820152603060248201527f4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766560448201527f20746865204d696e74657220726f6c6500000000000000000000000000000000606482015290519081900360840190fd5b61071281610c97565b50565b61071e33610cdf565b565b336000818152600160209081526040808320600160a060020a038716845290915281205490916104cc918590610523908663ffffffff610ade16565b60006104cc33848461091a565b600061077c60038363ffffffff610d2716565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600160a060020a0383161515610832576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03821615156108b8576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a03831615156109a0576040805160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515610a26576040805160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038316600090815260208190526040902054610a4f908263ffffffff610ade16565b600160a060020a038085166000908152602081905260408082209390935590841681522054610a84908263ffffffff610b3e16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600082821115610b38576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082820183811015610b9b576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b600160a060020a0382161515610c02576040805160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610c15908263ffffffff610b3e16565b600255600160a060020a038216600090815260208190526040902054610c41908263ffffffff610b3e16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610ca860038263ffffffff610dcf16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610cf060038263ffffffff610e5316565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610daf576040805160e560020a62461bcd02815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b610dd98282610d27565b15610e2e576040805160e560020a62461bcd02815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b610e5d8282610d27565b1515610ed9576040805160e560020a62461bcd02815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60448201527f6500000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058202400d8909416f99b9a679c80e46a84809fc15271edb242c2acb03ff2146cbc5d0029",
  "sourceMap": "640:207:29:-;;;708:137;8:9:-1;5:2;;;30:1;27;20:12;5:2;708:137:29;416:163:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:2:29;275:22:1;286:10;275;;;:22;;;:::i;:::-;504:12:18;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;526:16:18;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:18;:20;;-1:-1:-1;;552:20:18;;;;;;;;;;;;-1:-1:-1;640:207:29;;-1:-1:-1;640:207:29;737:119:1;793:21;:8;806:7;793:12;;;;;;:21;:::i;:::-;829:20;;-1:-1:-1;;;;;829:20:1;;;;;;;;737:119;:::o;260:175:0:-;337:18;341:4;347:7;337:3;;;;:18;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:0;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:0;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:0;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:0;:11;:20;;;;;;;;;;;;;;;779:200::o;640:207:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:207:29;;;-1:-1:-1;640:207:29;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "640:207:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;644:81:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:145:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2453:145:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2453:145:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1514:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1514:89:16;;;:::i;:::-;;;;;;;;;;;;;;;;3055:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3055:252:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3055:252:16;;;;;;;;;;;;;;;;;:::i;1478:81:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1478:81:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3702:203:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3702:203:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3702:203:16;;;;;;;;:::i;502:140:19:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;502:140:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;502:140:19;;;;;;;;:::i;1661:108:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1661:108:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1661:108:16;-1:-1:-1;;;;;1661:108:16;;:::i;838:85:18:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;838:85:18;;;:::i;560:90:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:90:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;560:90:1;-1:-1:-1;;;;;560:90:1;;:::i;:::-;;656:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;656:75:1;;;:::i;4392:213:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4392:213:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4392:213:16;;;;;;;;:::i;1972:153::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1972:153:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1972:153:16;;;;;;;;:::i;447:107:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;447:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;447:107:1;-1:-1:-1;;;;;447:107:1;;:::i;2183:132:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2183:132:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2183:132:16;;;;;;;;;;:::i;644:81:18:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;2453:145:16:-;2518:4;2534:36;2543:10;2555:7;2564:5;2534:8;:36::i;:::-;-1:-1:-1;2587:4:16;2453:145;;;;:::o;1514:89::-;1584:12;;1514:89;:::o;3055:252::-;3144:4;3160:36;3170:6;3178:9;3189:6;3160:9;:36::i;:::-;-1:-1:-1;;;;;3235:19:16;;;;;;:11;:19;;;;;;;;3223:10;3235:31;;;;;;;;;3206:73;;3215:6;;3235:43;;3271:6;3235:43;:35;:43;:::i;:::-;3206:8;:73::i;:::-;-1:-1:-1;3296:4:16;3055:252;;;;;:::o;1478:81:18:-;1543:9;;;;1478:81;:::o;3702:203:16:-;3807:10;3782:4;3828:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;3828:32:16;;;;;;;;;;3782:4;;3798:79;;3819:7;;3828:48;;3865:10;3828:48;:36;:48;:::i;502:140:19:-;576:4;350:20:1;359:10;350:8;:20::i;:::-;342:81;;;;;;;-1:-1:-1;;;;;342:81:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:22:19;598:7;607:6;592:5;:22::i;1661:108:16:-;-1:-1:-1;;;;;1744:18:16;1718:7;1744:18;;;;;;;;;;;;1661:108::o;838:85:18:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;560:90:1;350:20;359:10;350:8;:20::i;:::-;342:81;;;;;;;-1:-1:-1;;;;;342:81:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:19;635:7;624:10;:19::i;:::-;560:90;:::o;656:75::-;699:25;713:10;699:13;:25::i;:::-;656:75::o;4392:213:16:-;4502:10;4477:4;4523:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;4523:32:16;;;;;;;;;;4477:4;;4493:84;;4514:7;;4523:53;;4560:15;4523:53;:36;:53;:::i;1972:153::-;2041:4;2057:40;2067:10;2079:9;2090:6;2057:9;:40::i;447:107:1:-;503:4;526:21;:8;539:7;526:21;:12;:21;:::i;:::-;519:28;447:107;-1:-1:-1;;447:107:1:o;2183:132:16:-;-1:-1:-1;;;;;2281:18:16;;;2255:7;2281:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2183:132::o;7117:329::-;-1:-1:-1;;;;;7209:19:16;;;;7201:68;;;;;-1:-1:-1;;;;;7201:68:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7287:21:16;;;;7279:68;;;;;-1:-1:-1;;;;;7279:68:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7358:18:16;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:35;;;7408:31;;;;;;;;;;;;;;;;;7117:329;;;:::o;5079:422::-;-1:-1:-1;;;;;5176:20:16;;;;5168:70;;;;;-1:-1:-1;;;;;5168:70:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5256:23:16;;;;5248:71;;;;;-1:-1:-1;;;;;5248:71:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5350:17:16;;:9;:17;;;;;;;;;;;:29;;5372:6;5350:29;:21;:29;:::i;:::-;-1:-1:-1;;;;;5330:17:16;;;:9;:17;;;;;;;;;;;:49;;;;5412:20;;;;;;;:32;;5437:6;5412:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5389:20:16;;;:9;:20;;;;;;;;;;;;:55;;;;5459:35;;;;;;;5389:20;;5459:35;;;;;;;;;;;;;5079:422;;;:::o;1274:179:10:-;1332:7;1359:6;;;;1351:49;;;;;-1:-1:-1;;;;;1351:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:10;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:10:o;5771:302:16:-;-1:-1:-1;;;;;5846:21:16;;;;5838:65;;;;;-1:-1:-1;;;;;5838:65:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;5929:12;;:24;;5946:6;5929:24;:16;:24;:::i;:::-;5914:12;:39;-1:-1:-1;;;;;5984:18:16;;:9;:18;;;;;;;;;;;:30;;6007:6;5984:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;5963:18:16;;:9;:18;;;;;;;;;;;:51;;;;6029:37;;;;;;;5963:18;;:9;;6029:37;;;;;;;;;;5771:302;;:::o;737:119:1:-;793:21;:8;806:7;793:21;:12;:21;:::i;:::-;829:20;;-1:-1:-1;;;;;829:20:1;;;;;;;;737:119;:::o;862:127::-;921:24;:8;937:7;921:24;:15;:24;:::i;:::-;960:22;;-1:-1:-1;;;;;960:22:1;;;;;;;;862:127;:::o;779:200:0:-;851:4;-1:-1:-1;;;;;875:21:0;;;;867:68;;;;;-1:-1:-1;;;;;867:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:0;:11;:20;;;;;;;;;;;;;;;779:200::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;;;328:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:0;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:0;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;-1:-1:-1;;;;;581:64:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:0;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:0;;;510:180::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../../3rdparty/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"../../3rdparty/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"../../3rdparty/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\nimport \"../../3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"../../3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract SampleCrowdsaleToken is ERC20Mintable, ERC20Detailed {\n    constructor () public ERC20Detailed(\"Sample Crowdsale Token\", \"SCT\", 18) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n}\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\n * when receiving purchases.\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\ncontract MintableSale is CappedCrowdsale, MintedCrowdsale {\n    constructor (\n        uint256 rate,\n        address payable wallet,\n        uint256 cap,\n        ERC20Mintable token\n    )\n        public\n        Crowdsale(rate, wallet, token)\n        CappedCrowdsale(cap)\n    {\n\n    }\n}",
  "sourcePath": "/home/delerex/DelerexGit/Hedera/hederalaunch/contracts/MintableSale.sol",
  "ast": {
    "absolutePath": "/home/delerex/DelerexGit/Hedera/hederalaunch/contracts/MintableSale.sol",
    "exportedSymbols": {
      "MintableSale": [
        3221
      ],
      "SampleCrowdsaleToken": [
        3196
      ]
    },
    "id": 3222,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3177,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 3178,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 853,
        "src": "25:97:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3179,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 750,
        "src": "123:103:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 3180,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 779,
        "src": "227:95:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 3181,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 2199,
        "src": "323:86:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 3182,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 2171,
        "src": "410:86:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3183,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2198,
              "src": "673:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$2198",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3184,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:29"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3185,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2170,
              "src": "688:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2170",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3186,
            "nodeType": "InheritanceSpecifier",
            "src": "688:13:29"
          }
        ],
        "contractDependencies": [
          184,
          2081,
          2170,
          2198,
          2369
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 3196,
        "linearizedBaseContracts": [
          3196,
          2170,
          2198,
          184,
          2081,
          2369
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3194,
              "nodeType": "Block",
              "src": "781:64:29",
              "statements": []
            },
            "documentation": null,
            "id": 3195,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "744:24:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "770:5:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "777:2:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3192,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3188,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2170,
                  "src": "730:13:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2170_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "730:50:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "720:2:29"
            },
            "returnParameters": {
              "id": 3193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:0:29"
            },
            "scope": 3196,
            "src": "708:137:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3222,
        "src": "640:207:29"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3197,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 852,
              "src": "1502:15:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$852",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3198,
            "nodeType": "InheritanceSpecifier",
            "src": "1502:15:29"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3199,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 778,
              "src": "1519:15:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$778",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3200,
            "nodeType": "InheritanceSpecifier",
            "src": "1519:15:29"
          }
        ],
        "contractDependencies": [
          560,
          778,
          852,
          2653
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\nwhen receiving purchases.\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 3221,
        "linearizedBaseContracts": [
          3221,
          778,
          852,
          560,
          2653
        ],
        "name": "MintableSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3219,
              "nodeType": "Block",
              "src": "1751:8:29",
              "statements": []
            },
            "documentation": null,
            "id": 3220,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3211,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3202,
                    "src": "1697:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3212,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3204,
                    "src": "1703:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3213,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3208,
                    "src": "1711:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$2198",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 3214,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3210,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 560,
                  "src": "1687:9:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$560_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1687:30:29"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3216,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3206,
                    "src": "1742:3:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3217,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3215,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 852,
                  "src": "1726:15:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$852_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1726:20:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3202,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "1563:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3204,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "1585:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:15:29",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3206,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "1617:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3208,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "1638:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$2198",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3207,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2198,
                    "src": "1638:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$2198",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1553:110:29"
            },
            "returnParameters": {
              "id": 3218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:0:29"
            },
            "scope": 3221,
            "src": "1541:218:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3222,
        "src": "1477:284:29"
      }
    ],
    "src": "0:1761:29"
  },
  "legacyAST": {
    "absolutePath": "/home/delerex/DelerexGit/Hedera/hederalaunch/contracts/MintableSale.sol",
    "exportedSymbols": {
      "MintableSale": [
        3221
      ],
      "SampleCrowdsaleToken": [
        3196
      ]
    },
    "id": 3222,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3177,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 3178,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 853,
        "src": "25:97:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3179,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 750,
        "src": "123:103:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 3180,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 779,
        "src": "227:95:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 3181,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 2199,
        "src": "323:86:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/delerex/DelerexGit/Hedera/3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "../../3rdparty/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 3182,
        "nodeType": "ImportDirective",
        "scope": 3222,
        "sourceUnit": 2171,
        "src": "410:86:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3183,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2198,
              "src": "673:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$2198",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 3184,
            "nodeType": "InheritanceSpecifier",
            "src": "673:13:29"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3185,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2170,
              "src": "688:13:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2170",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 3186,
            "nodeType": "InheritanceSpecifier",
            "src": "688:13:29"
          }
        ],
        "contractDependencies": [
          184,
          2081,
          2170,
          2198,
          2369
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 3196,
        "linearizedBaseContracts": [
          3196,
          2170,
          2198,
          184,
          2081,
          2369
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3194,
              "nodeType": "Block",
              "src": "781:64:29",
              "statements": []
            },
            "documentation": null,
            "id": 3195,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "744:24:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                      "typeString": "literal_string \"Sample Crowdsale Token\""
                    },
                    "value": "Sample Crowdsale Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "534354",
                    "id": 3190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "770:5:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                      "typeString": "literal_string \"SCT\""
                    },
                    "value": "SCT"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 3191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "777:2:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 3192,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3188,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2170,
                  "src": "730:13:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2170_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "730:50:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "720:2:29"
            },
            "returnParameters": {
              "id": 3193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:0:29"
            },
            "scope": 3196,
            "src": "708:137:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3222,
        "src": "640:207:29"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3197,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 852,
              "src": "1502:15:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$852",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3198,
            "nodeType": "InheritanceSpecifier",
            "src": "1502:15:29"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3199,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 778,
              "src": "1519:15:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$778",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3200,
            "nodeType": "InheritanceSpecifier",
            "src": "1519:15:29"
          }
        ],
        "contractDependencies": [
          560,
          778,
          852,
          2653
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\nwhen receiving purchases.\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 3221,
        "linearizedBaseContracts": [
          3221,
          778,
          852,
          560,
          2653
        ],
        "name": "MintableSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3219,
              "nodeType": "Block",
              "src": "1751:8:29",
              "statements": []
            },
            "documentation": null,
            "id": 3220,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3211,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3202,
                    "src": "1697:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3212,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3204,
                    "src": "1703:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3213,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3208,
                    "src": "1711:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$2198",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 3214,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3210,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 560,
                  "src": "1687:9:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$560_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1687:30:29"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3216,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3206,
                    "src": "1742:3:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3217,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3215,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 852,
                  "src": "1726:15:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$852_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1726:20:29"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3202,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "1563:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3204,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "1585:22:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:15:29",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3206,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "1617:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3208,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3220,
                  "src": "1638:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$2198",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3207,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2198,
                    "src": "1638:13:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$2198",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1553:110:29"
            },
            "returnParameters": {
              "id": 3218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:0:29"
            },
            "scope": 3221,
            "src": "1541:218:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3222,
        "src": "1477:284:29"
      }
    ],
    "src": "0:1761:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-07-11T14:52:11.906Z",
  "devdoc": {
    "details": "Very simple ERC20 Token that can be minted. It is meant to be used in a crowdsale contract.",
    "methods": {
      "allowance(address,address)": {
        "details": "See `IERC20.allowance`."
      },
      "approve(address,uint256)": {
        "details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See `IERC20.balanceOf`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "See `ERC20._mint`.     * Requirements:     * - the caller must have the `MinterRole`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See `IERC20.totalSupply`."
      },
      "transfer(address,uint256)": {
        "details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "SampleCrowdsaleToken"
  },
  "userdoc": {
    "methods": {}
  }
}